name: Deploy
on: [push]
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v2

      # Install dependencies
      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      # - name: Get yarn cache directory
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"
      # - uses: actions/cache@v2
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-
      # - name: Install dependencies
      #   id: 'install-dependencies'
      #   run: yarn
      #
      # # Production build
      # - name: Build
      #   id: storefront-build
      #   run: yarn build

      # fail
      - name: Publish
        id: deploy
        run: |
          exit 1

      # Create GitHub Deployment
      - name: Create GitHub Deployment
        uses: shopify/github-deployment-action@debug
        if: always()
        with:
          token: ${{ github.token }}
          environment: 'preview'
          preview_url: ${{ steps.deploy.outputs.url }}
          description: ${{ github.event.head_commit.message }}
  deploy2:
    name: Deploy2
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - uses: actions/checkout@v2

      # Install dependencies
      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          check-latest: true
      # - name: Get yarn cache directory
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"
      # - uses: actions/cache@v2
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-
      # - name: Install dependencies
      #   id: 'install-dependencies'
      #   run: yarn
      #
      # # Production build
      # - name: Build
      #   id: storefront-build
      #   run: yarn build
      - name: env stuff
        run: |
          cat $GITHUB_ENV
          echo "======"
          echo "EVENT"
          echo "======"
          cat $GITHUB_EVENT_PATH

      # fail
      - name: Publish
        id: deploy
        run: |
          exit 1

      # Create GitHub Deployment
      - name: Create GitHub Deployment
        uses: shopify/github-deployment-action@debug
        if: always()
        with:
          token: ${{ github.token }}
          environment: 'preview'
          preview_url: ${{ steps.deploy.outputs.url }}
          description: ${{ github.event.head_commit.message }}
